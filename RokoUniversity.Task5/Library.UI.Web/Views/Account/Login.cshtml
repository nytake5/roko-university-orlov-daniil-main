@model Library.UI.Web.Models.LoginModel

@{
    ViewData["Title"] = "Login";
}
    
<h1>Login</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Login">   
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Login" class="control-label"></label>
                <input id="inputLogin" asp-for="Login" class="form-control" />
                <span asp-validation-for="Login" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input id="inputPassword" asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input id="loginButton" type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        document.getElementById("loginButton").onclick = function () {
            const login = document.getElementById("inputLogin");
            const password = document.getElementById("inputPassword");

            if (login.value.toLowerCase().includes(password.value.toLowerCase())) {
                alert("Password contains a login");
                event.preventDefault();
            }


            const pattern = /_{2,}/;
            if (pattern.test(login.value)) {
                alert("Incorrect _(greater than 1)");
                event.preventDefault();
            }
        }


    </script>
}
